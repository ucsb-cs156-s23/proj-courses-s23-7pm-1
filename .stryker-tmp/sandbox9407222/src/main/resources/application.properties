server.port=${PORT:8080}
spring.profiles.active=@springProfiles@
spring.jpa.open-in-view=false

# For properties defined with 
#    var=${SYMBOL:${env.SYMBOL}}
# the SYMBOL value on the left of the : is the value from env,
# and will pick up values from Heroku Config Vars.
# The env.SYMBOL value on the right of the : is the value from a .env file
#   and is picked up as a result of this plugin in the pom.xml  
#     <groupId>me.paulschwarz</groupId>
#     <artifactId>spring-dotenv</artifactId>

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:${env.GOOGLE_CLIENT_ID:client_id_unset}}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:${env.GOOGLE_CLIENT_SECRET:client_secret_unset}}
spring.security.oauth2.client.registration.google.scope=email,profile

management.endpoints.web.exposure.include=mappings
springfox.documentation.swagger.v2.path=/api/docs
spring.jpa.hibernate.ddl-auto=update
app.admin.emails=${ADMIN_EMAILS:${env.ADMIN_EMAILS:phtcon@ucsb.edu}}
app.sourceRepo=${SOURCE_REPO:${env.SOURCE_REPO:https://github.com/ucsb-cs156/proj-courses}}

spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER
server.compression.enabled=false

spring.data.mongodb.uri=${MONGODB_URI:${env.MONGODB_URI:mongodb+srv://fakeUsername:fakePassword@cluster0.ulqcw.mongodb.net/fakeDatabase?retryWrites=true&w=majority}}

spring.mvc.format.date-time=iso

app.startQtrYYYYQ=${START_QTR:${env.START_QTR:20221}}
app.endQtrYYYYQ=${END_QTR:${env.END_QTR:20222}}

app.ucsb.api.consumer_key=${UCSB_API_KEY:${env.UCSB_API_KEY:see-instructions-in-readme}}
server.port=${PORT:8080}
